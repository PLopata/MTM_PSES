        -:    0:Source:C:/msys64/mingw64/include/stdio.h
        -:    0:Graph:UT_Lib_Calc.gcno
        -:    0:Data:UT_Lib_Calc.gcda
        -:    0:Runs:14
        -:    1:/**
        -:    2: * This file has no copyright assigned and is placed in the Public Domain.
        -:    3: * This file is part of the mingw-w64 runtime package.
        -:    4: * No warranty is given; refer to the file DISCLAIMER.PD within this package.
        -:    5: */
        -:    6:#ifndef _INC_STDIO
        -:    7:#define _INC_STDIO
        -:    8:
        -:    9:#include <corecrt_stdio_config.h>
        -:   10:
        -:   11:#pragma pack(push,_CRT_PACKING)
        -:   12:
        -:   13:#pragma push_macro("snprintf")
        -:   14:#undef snprintf
        -:   15:#pragma push_macro("vsnprintf")
        -:   16:#undef vsnprintf
        -:   17:#pragma push_macro("snwprintf")
        -:   18:#undef snwprintf
        -:   19:#pragma push_macro("vsnwprintf")
        -:   20:#undef vsnwprintf
        -:   21:
        -:   22:#ifdef __cplusplus
        -:   23:extern "C" {
        -:   24:#endif
        -:   25:
        -:   26:#define BUFSIZ 512
        -:   27:#define _NFILE _NSTREAM_
        -:   28:#define _NSTREAM_ 512
        -:   29:#define _IOB_ENTRIES 20
        -:   30:#define EOF (-1)
        -:   31:
        -:   32:#ifndef _FILE_DEFINED
        -:   33:  struct _iobuf {
        -:   34:#ifdef _UCRT
        -:   35:    void *_Placeholder;
        -:   36:#else
        -:   37:    char *_ptr;
        -:   38:    int _cnt;
        -:   39:    char *_base;
        -:   40:    int _flag;
        -:   41:    int _file;
        -:   42:    int _charbuf;
        -:   43:    int _bufsiz;
        -:   44:    char *_tmpfname;
        -:   45:#endif
        -:   46:  };
        -:   47:  typedef struct _iobuf FILE;
        -:   48:#define _FILE_DEFINED
        -:   49:#endif
        -:   50:
        -:   51:#ifdef _POSIX_
        -:   52:#define _P_tmpdir "/"
        -:   53:#define _wP_tmpdir L"/"
        -:   54:#else
        -:   55:#define _P_tmpdir "\\"
        -:   56:#define _wP_tmpdir L"\\"
        -:   57:#endif
        -:   58:
        -:   59:#define L_tmpnam (sizeof(_P_tmpdir) + 12)
        -:   60:
        -:   61:#ifdef _POSIX_
        -:   62:#define L_ctermid 9
        -:   63:#define L_cuserid 32
        -:   64:#endif
        -:   65:
        -:   66:#define SEEK_CUR 1
        -:   67:#define SEEK_END 2
        -:   68:#define SEEK_SET 0
        -:   69:
        -:   70:#define	STDIN_FILENO	0
        -:   71:#define	STDOUT_FILENO	1
        -:   72:#define	STDERR_FILENO	2
        -:   73:
        -:   74:#define FILENAME_MAX 260
        -:   75:#define FOPEN_MAX 20
        -:   76:#define _SYS_OPEN 20
        -:   77:#define TMP_MAX 32767
        -:   78:
        -:   79:#ifndef NULL
        -:   80:#ifdef __cplusplus
        -:   81:#ifndef _WIN64
        -:   82:#define NULL 0
        -:   83:#else
        -:   84:#define NULL 0LL
        -:   85:#endif  /* W64 */
        -:   86:#else
        -:   87:#define NULL ((void *)0)
        -:   88:#endif
        -:   89:#endif
        -:   90:
        -:   91:#include <_mingw_off_t.h>
        -:   92:
        -:   93:_CRTIMP FILE *__cdecl __acrt_iob_func(unsigned index);
        -:   94:#ifndef _STDIO_DEFINED
        -:   95:#ifdef _WIN64
        -:   96:  _CRTIMP FILE *__cdecl __iob_func(void);
        -:   97:#define _iob  __iob_func()
        -:   98:#else
        -:   99:#ifdef _MSVCRT_
        -:  100:extern FILE _iob[];	/* A pointer to an array of FILE */
        -:  101:#define __iob_func()	(_iob)
        -:  102:#else
        -:  103:extern FILE (* __MINGW_IMP_SYMBOL(_iob))[];	/* A pointer to an array of FILE */
        -:  104:#define __iob_func()	(* __MINGW_IMP_SYMBOL(_iob))
        -:  105:#define _iob __iob_func()
        -:  106:#endif
        -:  107:#endif
        -:  108:#endif
        -:  109:
        -:  110:#ifndef _FPOS_T_DEFINED
        -:  111:#define _FPOS_T_DEFINED
        -:  112:#undef _FPOSOFF
        -:  113:
        -:  114:#if (!defined(NO_OLDNAMES) || defined(__GNUC__))
        -:  115:  __MINGW_EXTENSION typedef __int64 fpos_t;
        -:  116:#define _FPOSOFF(fp) ((long)(fp))
        -:  117:#else
        -:  118:  __MINGW_EXTENSION typedef long long fpos_t;
        -:  119:#define _FPOSOFF(fp) ((long)(fp))
        -:  120:#endif
        -:  121:
        -:  122:#endif
        -:  123:
        -:  124:#ifndef _STDSTREAM_DEFINED
        -:  125:#define _STDSTREAM_DEFINED
        -:  126:
        -:  127:#define stdin (__acrt_iob_func(0))
        -:  128:#define stdout (__acrt_iob_func(1))
        -:  129:#define stderr (__acrt_iob_func(2))
        -:  130:#endif
        -:  131:
        -:  132:#define _IOFBF 0x0000
        -:  133:#define _IOLBF 0x0040
        -:  134:#define _IONBF 0x0004
        -:  135:
        -:  136:#ifndef _UCRT
        -:  137:#define _IOREAD 0x0001
        -:  138:#define _IOWRT 0x0002
        -:  139:#define _IOMYBUF 0x0008
        -:  140:#define _IOEOF 0x0010
        -:  141:#define _IOERR 0x0020
        -:  142:#define _IOSTRG 0x0040
        -:  143:#define _IORW 0x0080
        -:  144:#ifdef _POSIX_
        -:  145:#define _IOAPPEND 0x0200
        -:  146:#endif
        -:  147:#endif
        -:  148:
        -:  149:#define _TWO_DIGIT_EXPONENT 0x1
        -:  150:
        -:  151:#if __MINGW_FORTIFY_LEVEL > 0
        -:  152:__mingw_bos_declare;
        -:  153:#endif
        -:  154:
        -:  155:#ifndef _STDIO_DEFINED
        -:  156:extern
        -:  157:  __attribute__((__format__ (gnu_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  158:  int __cdecl __mingw_sscanf(const char * __restrict__ _Src,const char * __restrict__ _Format,...);
        -:  159:extern
        -:  160:  __attribute__((__format__ (gnu_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  161:  int __cdecl __mingw_vsscanf (const char * __restrict__ _Str,const char * __restrict__ Format,va_list argp);
        -:  162:extern
        -:  163:  __attribute__((__format__ (gnu_scanf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  164:  int __cdecl __mingw_scanf(const char * __restrict__ _Format,...);
        -:  165:extern
        -:  166:  __attribute__((__format__ (gnu_scanf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  167:  int __cdecl __mingw_vscanf(const char * __restrict__ Format, va_list argp);
        -:  168:extern
        -:  169:  __attribute__((__format__ (gnu_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  170:  int __cdecl __mingw_fscanf(FILE * __restrict__ _File,const char * __restrict__ _Format,...);
        -:  171:extern
        -:  172:  __attribute__((__format__ (gnu_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  173:  int __cdecl __mingw_vfscanf (FILE * __restrict__ fp, const char * __restrict__ Format,va_list argp);
        -:  174:
        -:  175:extern
        -:  176:  __attribute__((__format__ (gnu_printf, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  177:  int __cdecl __mingw_vsnprintf(char * __restrict__ _DstBuf,size_t _MaxCount,const char * __restrict__ _Format,
        -:  178:                               va_list _ArgList);
        -:  179:extern
        -:  180:  __attribute__((__format__ (gnu_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  181:  int __cdecl __mingw_snprintf(char * __restrict__ s, size_t n, const char * __restrict__  format, ...);
        -:  182:extern
        -:  183:  __attribute__((__format__ (gnu_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  184:  int __cdecl __mingw_printf(const char * __restrict__ , ... ) __MINGW_NOTHROW;
        -:  185:extern
        -:  186:  __attribute__((__format__ (gnu_printf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  187:  int __cdecl __mingw_vprintf (const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  188:extern
        -:  189:  __attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  190:  int __cdecl __mingw_fprintf (FILE * __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHROW;
        -:  191:extern
        -:  192:  __attribute__((__format__ (gnu_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  193:  int __cdecl __mingw_vfprintf (FILE * __restrict__ , const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  194:extern
        -:  195:  __attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  196:  int __cdecl __mingw_sprintf (char * __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHROW;
        -:  197:extern
        -:  198:  __attribute__((__format__ (gnu_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  199:  int __cdecl __mingw_vsprintf (char * __restrict__ , const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  200:extern
        -:  201:  __attribute__((__format__ (gnu_printf, 2, 3))) __attribute__((nonnull (1,2)))
        -:  202:  int __cdecl __mingw_asprintf(char ** __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHROW;
        -:  203:extern
        -:  204:  __attribute__((__format__ (gnu_printf, 2, 0))) __attribute__((nonnull (1,2)))
        -:  205:  int __cdecl __mingw_vasprintf(char ** __restrict__ , const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  206:
        -:  207:extern
        -:  208:  __attribute__((__format__ (ms_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  209:  int __cdecl __ms_sscanf(const char * __restrict__ _Src,const char * __restrict__ _Format,...);
        -:  210:extern
        -:  211:  __attribute__((__format__ (ms_scanf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  212:  int __cdecl __ms_scanf(const char * __restrict__ _Format,...);
        -:  213:extern
        -:  214:  __attribute__((__format__ (ms_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  215:  int __cdecl __ms_fscanf(FILE * __restrict__ _File,const char * __restrict__ _Format,...);
        -:  216:
        -:  217:extern
        -:  218:  __attribute__((__format__ (ms_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  219:  int __cdecl __ms_printf(const char * __restrict__ , ... ) __MINGW_NOTHROW;
        -:  220:extern
        -:  221:  __attribute__((__format__ (ms_printf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  222:  int __cdecl __ms_vprintf (const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  223:extern
        -:  224:  __attribute__((__format__ (ms_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  225:  int __cdecl __ms_fprintf (FILE * __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHROW;
        -:  226:extern
        -:  227:  __attribute__((__format__ (ms_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  228:  int __cdecl __ms_vfprintf (FILE * __restrict__ , const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  229:extern
        -:  230:  __attribute__((__format__ (ms_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  231:  int __cdecl __ms_sprintf (char * __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHROW;
        -:  232:extern
        -:  233:  __attribute__((__format__ (ms_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  234:  int __cdecl __ms_vsprintf (char * __restrict__ , const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  235:
        -:  236:#ifdef _UCRT
        -:  237:  int __cdecl __stdio_common_vsprintf(unsigned __int64 options, char *str, size_t len, const char *format, _locale_t locale, va_list valist);
        -:  238:  int __cdecl __stdio_common_vfprintf(unsigned __int64 options, FILE *file, const char *format, _locale_t locale, va_list valist);
        -:  239:  int __cdecl __stdio_common_vsscanf(unsigned __int64 options, const char *input, size_t length, const char *format, _locale_t locale, va_list valist);
        -:  240:  int __cdecl __stdio_common_vfscanf(unsigned __int64 options, FILE *file, const char *format, _locale_t locale, va_list valist);
        -:  241:#endif
        -:  242:
        -:  243:#undef __MINGW_PRINTF_FORMAT
        -:  244:#undef __MINGW_SCANF_FORMAT
        -:  245:
        -:  246:#if defined(__clang__)
        -:  247:#define __MINGW_PRINTF_FORMAT printf
        -:  248:#define __MINGW_SCANF_FORMAT  scanf
        -:  249:#elif defined(_UCRT) || __USE_MINGW_ANSI_STDIO
        -:  250:#define __MINGW_PRINTF_FORMAT gnu_printf
        -:  251:#define __MINGW_SCANF_FORMAT  gnu_scanf
        -:  252:#else
        -:  253:#define __MINGW_PRINTF_FORMAT ms_printf
        -:  254:#define __MINGW_SCANF_FORMAT  ms_scanf
        -:  255:#endif
        -:  256:
        -:  257:#if __USE_MINGW_ANSI_STDIO && !defined(_CRTBLD)
        -:  258:/*
        -:  259: * User has expressed a preference for C99 conformance...
        -:  260: */
        -:  261:
        -:  262:#ifdef _GNU_SOURCE
        -:  263:__mingw_ovr
        -:  264:__attribute__ ((__format__ (gnu_printf, 2, 3))) __attribute__((nonnull (1,2)))
        -:  265:int asprintf(char **__ret, const char *__format, ...)
        -:  266:{
        -:  267:  int __retval;
        -:  268:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -:  269:  __retval = __mingw_vasprintf( __ret, __format, __local_argv );
        -:  270:  __builtin_va_end( __local_argv );
        -:  271:  return __retval;
        -:  272:}
        -:  273:
        -:  274:__mingw_ovr
        -:  275:__attribute__ ((__format__ (gnu_printf, 2, 0))) __attribute__((nonnull (1,2)))
        -:  276:int vasprintf(char **__ret, const char *__format, __builtin_va_list __local_argv)
        -:  277:{
        -:  278:  return __mingw_vasprintf( __ret, __format, __local_argv );
        -:  279:}
        -:  280:#endif /* _GNU_SOURCE */
        -:  281:
        -:  282:/* There seems to be a bug about builtins and static overrides of them
        -:  283:   in g++.  So we need to do here some trickery.  */
        -:  284:#ifdef __cplusplus
        -:  285:extern "C++" {
        -:  286:#endif
        -:  287:
        -:  288:__mingw_ovr
        -:  289:__attribute__((__format__ (gnu_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  290:int sscanf(const char *__source, const char *__format, ...)
        -:  291:{
        -:  292:  int __retval;
        -:  293:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -:  294:  __retval = __mingw_vsscanf( __source, __format, __local_argv );
        -:  295:  __builtin_va_end( __local_argv );
        -:  296:  return __retval;
        -:  297:}
        -:  298:
        -:  299:__mingw_ovr
        -:  300:__attribute__((__format__ (gnu_scanf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  301:int scanf(const char *__format, ...)
        -:  302:{
        -:  303:  int __retval;
        -:  304:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -:  305:  __retval = __mingw_vfscanf( stdin, __format, __local_argv );
        -:  306:  __builtin_va_end( __local_argv );
        -:  307:  return __retval;
        -:  308:}
        -:  309:
        -:  310:__mingw_ovr
        -:  311:__attribute__((__format__ (gnu_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  312:int fscanf(FILE *__stream, const char *__format, ...)
        -:  313:{
        -:  314:  int __retval;
        -:  315:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -:  316:  __retval = __mingw_vfscanf( __stream, __format, __local_argv );
        -:  317:  __builtin_va_end( __local_argv );
        -:  318:  return __retval;
        -:  319:}
        -:  320:
        -:  321:#ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
        -:  322:#ifdef __GNUC__
        -:  323:#pragma GCC diagnostic push
        -:  324:#pragma GCC diagnostic ignored "-Wshadow"
        -:  325:#endif
        -:  326:
        -:  327:__mingw_ovr
        -:  328:__attribute__((__format__ (gnu_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  329:int vsscanf (const char *__source, const char *__format, __builtin_va_list __local_argv)
        -:  330:{
        -:  331:  return __mingw_vsscanf( __source, __format, __local_argv );
        -:  332:}
        -:  333:
        -:  334:__mingw_ovr
        -:  335:__attribute__((__format__ (gnu_scanf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  336:int vscanf(const char *__format,  __builtin_va_list __local_argv)
        -:  337:{
        -:  338:  return __mingw_vfscanf( stdin, __format, __local_argv );
        -:  339:}
        -:  340:
        -:  341:__mingw_ovr
        -:  342:__attribute__((__format__ (gnu_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  343:int vfscanf (FILE *__stream,  const char *__format, __builtin_va_list __local_argv)
        -:  344:{
        -:  345:  return __mingw_vfscanf( __stream, __format, __local_argv );
        -:  346:}
        -:  347:
        -:  348:#ifdef __GNUC__
        -:  349:#pragma GCC diagnostic pop
        -:  350:#endif
        -:  351:#endif /* __NO_ISOCEXT */
        -:  352:
        -:  353:
        -:  354:
        -:  355:__mingw_ovr
        -:  356:__attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
    #####:  357:int fprintf (FILE *__stream, const char *__format, ...)
        -:  358:{
        -:  359:  int __retval;
    #####:  360:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
    #####:  361:  __retval = __mingw_vfprintf( __stream, __format, __local_argv );
    #####:  362:  __builtin_va_end( __local_argv );
    #####:  363:  return __retval;
        -:  364:}
        -:  365:
        -:  366:__mingw_ovr
        -:  367:__attribute__((__format__ (gnu_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
       76:  368:int printf (const char *__format, ...)
        -:  369:{
        -:  370:  int __retval;
       76:  371:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
       76:  372:  __retval = __mingw_vfprintf( stdout, __format, __local_argv );
       76:  373:  __builtin_va_end( __local_argv );
       76:  374:  return __retval;
        -:  375:}
        -:  376:
        -:  377:#if __MINGW_FORTIFY_VA_ARG
        -:  378:
        -:  379:int sprintf (char *__stream, const char *__format, ...) __MINGW_ASM_CALL(__mingw_sprintf);
        -:  380:
        -:  381:__mingw_bos_extern_ovr
        -:  382:__attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  383:int sprintf (char *__stream, const char *__format, ...)
        -:  384:{
        -:  385:  if (__mingw_bos_known(__stream)) {
        -:  386:    int __retval = __mingw_snprintf( __stream, __mingw_bos(__stream, 1), __format, __builtin_va_arg_pack() );
        -:  387:    if (__retval >= 0)
        -:  388:      __mingw_bos_ptr_chk(__stream, (size_t)__retval + 1, 1);
        -:  389:    return __retval;
        -:  390:  }
        -:  391:  return __mingw_sprintf( __stream, __format, __builtin_va_arg_pack() );
        -:  392:}
        -:  393:
        -:  394:#else /* !__MINGW_FORTIFY_VA_ARG */
        -:  395:
        -:  396:__mingw_ovr
        -:  397:__attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
    #####:  398:int sprintf (char *__stream, const char *__format, ...)
        -:  399:{
        -:  400:  int __retval;
    #####:  401:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
    #####:  402:  __retval = __mingw_vsprintf( __stream, __format, __local_argv );
    #####:  403:  __builtin_va_end( __local_argv );
    #####:  404:  return __retval;
        -:  405:}
        -:  406:
        -:  407:#endif /* __MINGW_FORTIFY_VA_ARG */
        -:  408:
        -:  409:__mingw_ovr
        -:  410:__attribute__((__format__ (gnu_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  411:int vfprintf (FILE *__stream, const char *__format, __builtin_va_list __local_argv)
        -:  412:{
        -:  413:  return __mingw_vfprintf( __stream, __format, __local_argv );
        -:  414:}
        -:  415:
        -:  416:__mingw_ovr
        -:  417:__attribute__((__format__ (gnu_printf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
    #####:  418:int vprintf (const char *__format, __builtin_va_list __local_argv)
        -:  419:{
    #####:  420:  return __mingw_vfprintf( stdout, __format, __local_argv );
        -:  421:}
        -:  422:
        -:  423:__mingw_bos_ovr
        -:  424:__attribute__((__format__ (gnu_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  425:int vsprintf (char *__stream, const char *__format, __builtin_va_list __local_argv)
        -:  426:{
        -:  427:#if __MINGW_FORTIFY_LEVEL > 0
        -:  428:  if (__mingw_bos_known(__stream)) {
        -:  429:    int __retval = __mingw_vsnprintf( __stream, __mingw_bos(__stream, 1), __format, __local_argv );
        -:  430:    if (__retval >= 0)
        -:  431:      __mingw_bos_ptr_chk(__stream, (size_t)__retval + 1, 1);
        -:  432:    return __retval;
        -:  433:  }
        -:  434:#endif
        -:  435:  return __mingw_vsprintf( __stream, __format, __local_argv );
        -:  436:}
        -:  437:/* #ifndef __NO_ISOCEXT */  /* externs in libmingwex.a */
        -:  438:
        -:  439:#if __MINGW_FORTIFY_VA_ARG
        -:  440:
        -:  441:int snprintf (char *__stream, size_t __n, const char *__format, ...) __MINGW_ASM_CALL(__mingw_snprintf);
        -:  442:
        -:  443:__mingw_bos_extern_ovr
        -:  444:__attribute__((__format__ (gnu_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  445:int snprintf (char *__stream, size_t __n, const char *__format, ...)
        -:  446:{
        -:  447:  __mingw_bos_ptr_chk_warn(__stream, __n, 1);
        -:  448:  return __mingw_snprintf( __stream, __n, __format, __builtin_va_arg_pack() );
        -:  449:}
        -:  450:
        -:  451:#else /* !__MINGW_FORTIFY_VA_ARG */
        -:  452:
        -:  453:__mingw_ovr
        -:  454:__attribute__((__format__ (gnu_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  455:int snprintf (char *__stream, size_t __n, const char *__format, ...)
        -:  456:{
        -:  457:  int __retval;
        -:  458:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -:  459:  __retval = __mingw_vsnprintf( __stream, __n, __format, __local_argv );
        -:  460:  __builtin_va_end( __local_argv );
        -:  461:  return __retval;
        -:  462:}
        -:  463:
        -:  464:#endif /* __MINGW_FORTIFY_VA_ARG */
        -:  465:
        -:  466:__mingw_bos_ovr
        -:  467:__attribute__((__format__ (gnu_printf, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
       26:  468:int vsnprintf (char *__stream, size_t __n, const char *__format, __builtin_va_list __local_argv)
        -:  469:{
        -:  470:#if __MINGW_FORTIFY_LEVEL > 0
        -:  471:  __mingw_bos_ptr_chk_warn(__stream, __n, 1);
        -:  472:#endif
       26:  473:  return __mingw_vsnprintf( __stream, __n, __format, __local_argv );
        -:  474:}
        -:  475:
        -:  476:/* Override __builtin_printf-routines ... Kludge for libstdc++ ...*/
        -:  477:#define __builtin_vsnprintf __mingw_vsnprintf
        -:  478:#define __builtin_vsprintf __mingw_vsprintf
        -:  479:
        -:  480:/* #endif */ /* __NO_ISOCEXT */
        -:  481:
        -:  482:#ifdef __cplusplus
        -:  483:}
        -:  484:#endif
        -:  485:
        -:  486:#else /* !__USE_MINGW_ANSI_STDIO */
        -:  487:
        -:  488:#undef __builtin_vsnprintf
        -:  489:#undef __builtin_vsprintf
        -:  490:
        -:  491:/*
        -:  492: * Default configuration: simply direct all calls to MSVCRT...
        -:  493: */
        -:  494:#ifdef _UCRT
        -:  495:#ifdef __GNUC__
        -:  496:#pragma GCC diagnostic push
        -:  497:#pragma GCC diagnostic ignored "-Wshadow"
        -:  498:#endif
        -:  499:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  500:  int __cdecl fprintf(FILE * __restrict__ _File,const char * __restrict__ _Format,...);
        -:  501:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  502:  int __cdecl printf(const char * __restrict__ _Format,...);
        -:  503:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  504:  int __cdecl sprintf(char * __restrict__ _Dest,const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  505:
        -:  506:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  507:  int __cdecl vfprintf(FILE * __restrict__ _File,const char * __restrict__ _Format,va_list _ArgList);
        -:  508:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  509:  int __cdecl vprintf(const char * __restrict__ _Format,va_list _ArgList);
        -:  510:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  511:  int __cdecl vsprintf(char * __restrict__ _Dest,const char * __restrict__ _Format,va_list _Args) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  512:
        -:  513:  __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -:  514:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  515:  int __cdecl fscanf(FILE * __restrict__ _File,const char * __restrict__ _Format,...);
        -:  516:  __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -:  517:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  518:  int __cdecl scanf(const char * __restrict__ _Format,...);
        -:  519:  __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -:  520:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  521:  int __cdecl sscanf(const char * __restrict__ _Src,const char * __restrict__ _Format,...);
        -:  522:#ifdef _GNU_SOURCE
        -:  523:  __attribute__ ((__format__ (__MINGW_PRINTF_FORMAT, 2, 0)))
        -:  524:  int __cdecl vasprintf(char ** __restrict__ _Ret,const char * __restrict__ _Format,va_list _Args);
        -:  525:  __attribute__ ((__format__ (__MINGW_PRINTF_FORMAT, 2, 3)))
        -:  526:  int __cdecl asprintf(char ** __restrict__ _Ret,const char * __restrict__ _Format,...);
        -:  527:#endif /*_GNU_SOURCE*/
        -:  528:
        -:  529:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  530:  int vfscanf (FILE *__stream,  const char *__format, __builtin_va_list __local_argv);
        -:  531:
        -:  532:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  533:  int vsscanf (const char * __restrict__ __source, const char * __restrict__ __format, __builtin_va_list __local_argv);
        -:  534:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  535:  int vscanf(const char *__format,  __builtin_va_list __local_argv);
        -:  536:
        -:  537:#ifdef __GNUC__
        -:  538:#pragma GCC diagnostic pop
        -:  539:#endif
        -:  540:
        -:  541:#else
        -:  542:  __attribute__((__format__ (ms_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  543:  int __cdecl fprintf(FILE * __restrict__ _File,const char * __restrict__ _Format,...);
        -:  544:  __attribute__((__format__ (ms_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  545:  int __cdecl printf(const char * __restrict__ _Format,...);
        -:  546:  __attribute__((__format__ (ms_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  547:  int __cdecl sprintf(char * __restrict__ _Dest,const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  548:
        -:  549:  __attribute__((__format__ (ms_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  550:  int __cdecl vfprintf(FILE * __restrict__ _File,const char * __restrict__ _Format,va_list _ArgList);
        -:  551:  __attribute__((__format__ (ms_printf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  552:  int __cdecl vprintf(const char * __restrict__ _Format,va_list _ArgList);
        -:  553:  __attribute__((__format__ (ms_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  554:  int __cdecl vsprintf(char * __restrict__ _Dest,const char * __restrict__ _Format,va_list _Args) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  555:
        -:  556:  __attribute__((__format__ (ms_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  557:  int __cdecl fscanf(FILE * __restrict__ _File,const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  558:  __attribute__((__format__ (ms_scanf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  559:  int __cdecl scanf(const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  560:  __attribute__((__format__ (ms_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  561:  int __cdecl sscanf(const char * __restrict__ _Src,const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  562:#ifdef _GNU_SOURCE
        -:  563:  int __cdecl vasprintf(char ** __restrict__ __ret,const char * __restrict__ __format,va_list __ap)  __attribute__ ((format (__MINGW_PRINTF_FORMAT, 2, 0)));
        -:  564:  int __cdecl asprintf(char ** __restrict__ __ret,const char * __restrict__ __format,...) __attribute__ ((format (__MINGW_PRINTF_FORMAT, 2, 3)));
        -:  565:#endif /*_GNU_SOURCE*/
        -:  566:#ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
        -:  567:#ifdef __GNUC__
        -:  568:#pragma GCC diagnostic push
        -:  569:#pragma GCC diagnostic ignored "-Wshadow"
        -:  570:#endif
        -:  571:
        -:  572:  __attribute__((__format__ (ms_scanf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  573:  int __cdecl __ms_vscanf(const char * __restrict__ Format, va_list argp);
        -:  574:  __attribute__((__format__ (ms_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  575:  int __cdecl __ms_vfscanf (FILE * __restrict__ fp, const char * __restrict__ Format,va_list argp);
        -:  576:  __attribute__((__format__ (ms_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  577:  int __cdecl __ms_vsscanf (const char * __restrict__ _Str,const char * __restrict__ Format,va_list argp);
        -:  578:
        -:  579:  __mingw_ovr
        -:  580:  __attribute__((__format__ (ms_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  581:  int vfscanf (FILE *__stream,  const char *__format, __builtin_va_list __local_argv)
        -:  582:  {
        -:  583:    return __ms_vfscanf (__stream, __format, __local_argv);
        -:  584:  }
        -:  585:
        -:  586:  __mingw_ovr
        -:  587:  __attribute__((__format__ (ms_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  588:  int vsscanf (const char * __restrict__ __source, const char * __restrict__ __format, __builtin_va_list __local_argv)
        -:  589:  {
        -:  590:    return __ms_vsscanf( __source, __format, __local_argv );
        -:  591:  }
        -:  592:  __mingw_ovr
        -:  593:  __attribute__((__format__ (ms_scanf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  594:  int vscanf(const char *__format,  __builtin_va_list __local_argv)
        -:  595:  {
        -:  596:    return __ms_vscanf (__format, __local_argv);
        -:  597:  }
        -:  598:
        -:  599:#ifdef __GNUC__
        -:  600:#pragma GCC diagnostic pop
        -:  601:#endif
        -:  602:
        -:  603:#endif /* __NO_ISOCEXT */
        -:  604:#endif /* _UCRT */
        -:  605:#endif /* __USE_MINGW_ANSI_STDIO */
        -:  606:
        -:  607:  _CRTIMP int __cdecl _filbuf(FILE *_File);
        -:  608:  _CRTIMP int __cdecl _flsbuf(int _Ch,FILE *_File);
        -:  609:#ifdef _POSIX_
        -:  610:  _CRTIMP FILE *__cdecl _fsopen(const char *_Filename,const char *_Mode);
        -:  611:#else
        -:  612:  _CRTIMP FILE *__cdecl _fsopen(const char *_Filename,const char *_Mode,int _ShFlag);
        -:  613:#endif
        -:  614:  void __cdecl clearerr(FILE *_File);
        -:  615:  int __cdecl fclose(FILE *_File);
        -:  616:  _CRTIMP int __cdecl _fcloseall(void);
        -:  617:#ifdef _POSIX_
        -:  618:  FILE *__cdecl fdopen(int _FileHandle,const char *_Mode) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -:  619:#else
        -:  620:  _CRTIMP FILE *__cdecl _fdopen(int _FileHandle,const char *_Mode);
        -:  621:#endif
        -:  622:  int __cdecl feof(FILE *_File);
        -:  623:  int __cdecl ferror(FILE *_File);
        -:  624:  int __cdecl fflush(FILE *_File);
        -:  625:  int __cdecl fgetc(FILE *_File);
        -:  626:  _CRTIMP int __cdecl _fgetchar(void);
        -:  627:  int __cdecl fgetpos(FILE * __restrict__ _File ,fpos_t * __restrict__ _Pos); /* 64bit only, no 32bit version */
        -:  628:  int __cdecl fgetpos64(FILE * __restrict__ _File ,fpos_t * __restrict__ _Pos); /* fgetpos already 64bit */
        -:  629:  char *__cdecl fgets(char * __restrict__ _Buf,int _MaxCount,FILE * __restrict__ _File);
        -:  630:  _CRTIMP int __cdecl _fileno(FILE *_File);
        -:  631:#ifdef _POSIX_
        -:  632:  int __cdecl fileno(FILE *_File) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -:  633:#endif
        -:  634:  _CRTIMP char *__cdecl _tempnam(const char *_DirName,const char *_FilePrefix);
        -:  635:  _CRTIMP int __cdecl _flushall(void);
        -:  636:  FILE *__cdecl fopen(const char * __restrict__ _Filename,const char * __restrict__ _Mode) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  637:  FILE *fopen64(const char * __restrict__ filename,const char * __restrict__  mode);
        -:  638:  int __cdecl fputc(int _Ch,FILE *_File);
        -:  639:  _CRTIMP int __cdecl _fputchar(int _Ch);
        -:  640:  int __cdecl fputs(const char * __restrict__ _Str,FILE * __restrict__ _File);
        -:  641:  size_t __cdecl fread(void * __restrict__ _DstBuf,size_t _ElementSize,size_t _Count,FILE * __restrict__ _File);
        -:  642:  FILE *__cdecl freopen(const char * __restrict__ _Filename,const char * __restrict__ _Mode,FILE * __restrict__ _File) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  643:  int __cdecl fsetpos(FILE *_File,const fpos_t *_Pos);
        -:  644:  int __cdecl fsetpos64(FILE *_File,const fpos_t *_Pos); /* fsetpos already 64bit */
        -:  645:  int __cdecl fseek(FILE *_File,long _Offset,int _Origin);
        -:  646:  long __cdecl ftell(FILE *_File);
        -:  647:
        -:  648:  /* Shouldn't be any fseeko32 in glibc, 32bit to 64bit casting should be fine */
        -:  649:  /* int fseeko32(FILE* stream, _off_t offset, int whence);*/ /* fseeko32 redirects to fseeko64 */
        -:  650:  _CRTIMP int __cdecl _fseeki64(FILE *_File,__int64 _Offset,int _Origin);
        -:  651:  _CRTIMP __int64 __cdecl _ftelli64(FILE *_File);
        -:  652:#ifdef _UCRT
        -:  653:  __mingw_static_ovr int fseeko(FILE *_File, _off_t _Offset, int _Origin) {
        -:  654:    return fseek(_File, _Offset, _Origin);
        -:  655:  }
        -:  656:  __mingw_static_ovr int fseeko64(FILE *_File, _off64_t _Offset, int _Origin) {
        -:  657:    return _fseeki64(_File, _Offset, _Origin);
        -:  658:  }
        -:  659:  __mingw_static_ovr _off_t ftello(FILE *_File) {
        -:  660:    return ftell(_File);
        -:  661:  }
        -:  662:  __mingw_static_ovr _off64_t ftello64(FILE *_File) {
        -:  663:    return _ftelli64(_File);
        -:  664:  }
        -:  665:#else
        -:  666:  int fseeko64(FILE* stream, _off64_t offset, int whence);
        -:  667:  int fseeko(FILE* stream, _off_t offset, int whence);
        -:  668:  /* Returns truncated 64bit off_t */
        -:  669:  _off_t ftello(FILE * stream);
        -:  670:  _off64_t ftello64(FILE * stream);
        -:  671:#endif
        -:  672:
        -:  673:#ifndef _FILE_OFFSET_BITS_SET_FSEEKO
        -:  674:#define _FILE_OFFSET_BITS_SET_FSEEKO
        -:  675:#if (defined(_FILE_OFFSET_BITS) && (_FILE_OFFSET_BITS == 64))
        -:  676:#define fseeko fseeko64
        -:  677:#endif /* (defined(_FILE_OFFSET_BITS) && (_FILE_OFFSET_BITS == 64)) */
        -:  678:#endif /* _FILE_OFFSET_BITS_SET_FSEEKO */
        -:  679:
        -:  680:#ifndef _FILE_OFFSET_BITS_SET_FTELLO
        -:  681:#define _FILE_OFFSET_BITS_SET_FTELLO
        -:  682:#if (defined(_FILE_OFFSET_BITS) && (_FILE_OFFSET_BITS == 64))
        -:  683:#define ftello ftello64
        -:  684:#endif /* (defined(_FILE_OFFSET_BITS) && (_FILE_OFFSET_BITS == 64)) */
        -:  685:#endif /* _FILE_OFFSET_BITS_SET_FTELLO */
        -:  686:
        -:  687:  size_t __cdecl fwrite(const void * __restrict__ _Str,size_t _Size,size_t _Count,FILE * __restrict__ _File);
        -:  688:  int __cdecl getc(FILE *_File);
        -:  689:  int __cdecl getchar(void);
        -:  690:  _CRTIMP int __cdecl _getmaxstdio(void);
        -:  691:  char *__cdecl gets(char *_Buffer) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  692:  int __cdecl _getw(FILE *_File);
        -:  693:#ifndef _CRT_PERROR_DEFINED
        -:  694:#define _CRT_PERROR_DEFINED
        -:  695:  void __cdecl perror(const char *_ErrMsg);
        -:  696:#endif
        -:  697:#ifdef _CRT_USE_WINAPI_FAMILY_DESKTOP_APP
        -:  698:  _CRTIMP int __cdecl _pclose(FILE *_File);
        -:  699:  _CRTIMP FILE *__cdecl _popen(const char *_Command,const char *_Mode);
        -:  700:#if !defined(NO_OLDNAMES) && !defined(popen)
        -:  701:#define popen	_popen
        -:  702:#define pclose	_pclose
        -:  703:#endif
        -:  704:#endif /* _CRT_USE_WINAPI_FAMILY_DESKTOP_APP */
        -:  705:  int __cdecl putc(int _Ch,FILE *_File);
        -:  706:  int __cdecl putchar(int _Ch);
        -:  707:  int __cdecl puts(const char *_Str);
        -:  708:  _CRTIMP int __cdecl _putw(int _Word,FILE *_File);
        -:  709:#ifndef _CRT_DIRECTORY_DEFINED
        -:  710:#define _CRT_DIRECTORY_DEFINED
        -:  711:  int __cdecl remove(const char *_Filename);
        -:  712:  int __cdecl rename(const char *_OldFilename,const char *_NewFilename);
        -:  713:  _CRTIMP int __cdecl _unlink(const char *_Filename);
        -:  714:#ifndef	NO_OLDNAMES
        -:  715:  int __cdecl unlink(const char *_Filename) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -:  716:#endif
        -:  717:#endif
        -:  718:  void __cdecl rewind(FILE *_File);
        -:  719:  _CRTIMP int __cdecl _rmtmp(void);
        -:  720:  void __cdecl setbuf(FILE * __restrict__ _File,char * __restrict__ _Buffer) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  721:  _CRTIMP int __cdecl _setmaxstdio(int _Max);
        -:  722:  _CRTIMP unsigned int __cdecl _set_output_format(unsigned int _Format);
        -:  723:  _CRTIMP unsigned int __cdecl _get_output_format(void);
        -:  724:  int __cdecl setvbuf(FILE * __restrict__ _File,char * __restrict__ _Buf,int _Mode,size_t _Size);
        -:  725:#ifdef _UCRT
        -:  726:  __mingw_ovr
        -:  727:  __MINGW_ATTRIB_PURE
        -:  728:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  729:  int __cdecl _scprintf(const char * __restrict__ _Format,...)
        -:  730:  {
        -:  731:    __builtin_va_list __ap;
        -:  732:    int __ret;
        -:  733:    __builtin_va_start(__ap, _Format);
        -:  734:    __ret = __stdio_common_vsprintf(_CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR, NULL, 0, _Format, NULL, __ap);
        -:  735:    __builtin_va_end(__ap);
        -:  736:    return __ret;
        -:  737:  }
        -:  738:  __mingw_ovr __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -:  739:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  740:  int __cdecl _snscanf(const char * __restrict__ _Src,size_t _MaxCount,const char * __restrict__ _Format,...)
        -:  741:  {
        -:  742:    __builtin_va_list __ap;
        -:  743:    int __ret;
        -:  744:    __builtin_va_start(__ap, _Format);
        -:  745:    __ret = __stdio_common_vsscanf(0, _Src, _MaxCount, _Format, NULL, __ap);
        -:  746:    __builtin_va_end(__ap);
        -:  747:    return __ret;
        -:  748:  }
        -:  749:#else
        -:  750:  __MINGW_ATTRIB_PURE
        -:  751:  __attribute__((__format__ (ms_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  752:  _CRTIMP int __cdecl _scprintf(const char * __restrict__ _Format,...);
        -:  753:  __attribute__((__format__ (ms_scanf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  754:  _CRTIMP int __cdecl _snscanf(const char * __restrict__ _Src,size_t _MaxCount,const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  755:#endif
        -:  756:  __MINGW_ATTRIB_PURE
        -:  757:  __attribute__((__format__ (ms_printf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  758:  _CRTIMP int __cdecl _vscprintf(const char * __restrict__ _Format,va_list _ArgList);
        -:  759:  FILE *__cdecl tmpfile(void) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  760:  char *__cdecl tmpnam(char *_Buffer);
        -:  761:  int __cdecl ungetc(int _Ch,FILE *_File);
        -:  762:
        -:  763:#ifdef _UCRT
        -:  764:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  765:  int __cdecl _vsnprintf(char * __restrict__ _Dest,size_t _Count,const char * __restrict__ _Format,va_list _Args) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  766:  __mingw_ovr __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -:  767:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  768:  int __cdecl _snprintf(char * __restrict__ _Dest,size_t _Count,const char * __restrict__ _Format,...)
        -:  769:  {
        -:  770:    __builtin_va_list __ap;
        -:  771:    int __ret;
        -:  772:    __builtin_va_start(__ap, _Format);
        -:  773:    __ret = _vsnprintf(_Dest, _Count, _Format, __ap);
        -:  774:    __builtin_va_end(__ap);
        -:  775:    return __ret;
        -:  776:  }
        -:  777:#else
        -:  778:  __attribute__((__format__ (ms_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  779:  _CRTIMP int __cdecl _snprintf(char * __restrict__ _Dest,size_t _Count,const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  780:  __attribute__((__format__ (ms_printf, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  781:  _CRTIMP int __cdecl _vsnprintf(char * __restrict__ _Dest,size_t _Count,const char * __restrict__ _Format,va_list _Args) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  782:#endif
        -:  783:
        -:  784:#if __MINGW_FORTIFY_LEVEL > 0
        -:  785:
        -:  786:char * __cdecl __gets_chk(char *, size_t);
        -:  787:char * __cdecl __mingw_call_gets_warn(char *) __MINGW_ASM_CALL(gets)
        -:  788:  __attribute__((__warning__("Using gets() is always unsafe - use fgets() instead")));
        -:  789:char * __cdecl __mingw_call_fgets(char * __restrict__, int, FILE * __restrict__) __MINGW_ASM_CALL(fgets);
        -:  790:size_t __cdecl __mingw_call_fread(void * __restrict__, size_t, size_t, FILE * __restrict__) __MINGW_ASM_CALL(fread);
        -:  791:char * __cdecl __mingw_call_tmpnam(char *) __MINGW_ASM_CALL(tmpnam);
        -:  792:
        -:  793:__mingw_bos_extern_ovr
        -:  794:char * gets(char * __dst)
        -:  795:{
        -:  796:  if (__mingw_bos_known(__dst))
        -:  797:    return __gets_chk(__dst, __mingw_bos(__dst, 1));
        -:  798:  return __mingw_call_gets_warn(__dst);
        -:  799:}
        -:  800:
        -:  801:__mingw_bos_extern_ovr
        -:  802:char * fgets(char * __restrict__ __dst, int __n, FILE * __restrict__ __f)
        -:  803:{
        -:  804:  __mingw_bos_ptr_chk_warn(__dst, __n, 1);
        -:  805:  return __mingw_call_fgets(__dst, __n, __f);
        -:  806:}
        -:  807:
        -:  808:__mingw_bos_extern_ovr
        -:  809:size_t fread(void * __restrict__ __dst, size_t __sz, size_t __n, FILE * __restrict__ __f)
        -:  810:{
        -:  811:  __mingw_bos_ptr_chk_warn(__dst, __sz * __n, 0);
        -:  812:  return __mingw_call_fread(__dst, __sz, __n, __f);
        -:  813:}
        -:  814:
        -:  815:__mingw_bos_extern_ovr
        -:  816:char * tmpnam(char * __dst)
        -:  817:{
        -:  818:  __mingw_bos_ptr_chk_warn(__dst, L_tmpnam, 1);
        -:  819:  return __mingw_call_tmpnam(__dst);
        -:  820:}
        -:  821:
        -:  822:#endif /* __MINGW_FORTIFY_LEVEL > 0 */
        -:  823:
        -:  824:#if __USE_MINGW_ANSI_STDIO == 0
        -:  825:
        -:  826:#ifdef _UCRT
        -:  827:#ifdef __GNUC__
        -:  828:#pragma GCC diagnostic push
        -:  829:#pragma GCC diagnostic ignored "-Wshadow"
        -:  830:#endif
        -:  831:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  832:  int vsnprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, va_list __local_argv);
        -:  833:
        -:  834:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  835:  int snprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, ...);
        -:  836:#ifdef __GNUC__
        -:  837:#pragma GCC diagnostic pop
        -:  838:#endif
        -:  839:#else
        -:  840:
        -:  841:/* this is here to deal with software defining
        -:  842: * vsnprintf as _vsnprintf, eg. libxml2.  */
        -:  843:
        -:  844:#ifdef __GNUC__
        -:  845:#pragma GCC diagnostic push
        -:  846:#pragma GCC diagnostic ignored "-Wshadow"
        -:  847:#endif
        -:  848:
        -:  849:  __attribute__((__format__ (ms_printf, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  850:  int __cdecl __ms_vsnprintf(char * __restrict__ d,size_t n,const char * __restrict__ format,va_list arg)
        -:  851:    __MINGW_ATTRIB_DEPRECATED_MSVC2005 __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  852:
        -:  853:  __mingw_bos_ovr
        -:  854:  __attribute__((__format__ (ms_printf, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  855:  int vsnprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, va_list __local_argv)
        -:  856:  {
        -:  857:#if __MINGW_FORTIFY_LEVEL > 0
        -:  858:    __mingw_bos_ptr_chk_warn(__stream, __n, 1);
        -:  859:#endif
        -:  860:    if (__builtin_constant_p(__n) && __n == 0)
        -:  861:      return _vscprintf(__format, __local_argv);
        -:  862:    return __ms_vsnprintf (__stream, __n, __format, __local_argv);
        -:  863:  }
        -:  864:
        -:  865:  __attribute__((__format__ (ms_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  866:  int __cdecl __ms_snprintf(char * __restrict__ s, size_t n, const char * __restrict__  format, ...);
        -:  867:
        -:  868:#ifndef __NO_ISOCEXT
        -:  869:#if __MINGW_FORTIFY_VA_ARG
        -:  870:
        -:  871:int snprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, ...) __MINGW_ASM_CALL(__ms_snprintf);
        -:  872:
        -:  873:__mingw_bos_extern_ovr
        -:  874:__attribute__((__format__ (ms_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  875:int snprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, ...)
        -:  876:{
        -:  877:  __mingw_bos_ptr_chk_warn(__stream, __n, 1);
        -:  878:  if (__builtin_constant_p(__n) && __n == 0)
        -:  879:    return _scprintf(__format, __builtin_va_arg_pack());
        -:  880:  return __ms_snprintf(__stream, __n, __format, __builtin_va_arg_pack());
        -:  881:}
        -:  882:
        -:  883:#else /* !__MINGW_FORTIFY_VA_ARG */
        -:  884:
        -:  885:__mingw_ovr
        -:  886:__attribute__((__format__ (ms_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  887:int snprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, ...)
        -:  888:{
        -:  889:  int __retval;
        -:  890:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -:  891:  if (__builtin_constant_p(__n) && __n == 0)
        -:  892:    __retval = _vscprintf(__format, __local_argv);
        -:  893:  else
        -:  894:    __retval = __ms_vsnprintf (__stream, __n, __format, __local_argv);
        -:  895:  __builtin_va_end( __local_argv );
        -:  896:  return __retval;
        -:  897:}
        -:  898:
        -:  899:#endif /* !__MINGW_FORTIFY_VA_ARG */
        -:  900:#endif /* !__NO_ISOCEXT */
        -:  901:
        -:  902:#if __MINGW_FORTIFY_VA_ARG
        -:  903:
        -:  904:int __cdecl __mingw_call_ms_sprintf(char * __restrict__, const char * __restrict__, ...) __MINGW_ASM_CALL(sprintf);
        -:  905:
        -:  906:__mingw_bos_extern_ovr
        -:  907:__attribute__((__format__ (ms_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  908:int sprintf (char * __restrict__ __stream, const char * __restrict__ __format, ...)
        -:  909:{
        -:  910:  if (__mingw_bos_known(__stream)) {
        -:  911:    int __retval = __ms_snprintf( __stream, __mingw_bos(__stream, 1), __format, __builtin_va_arg_pack() );
        -:  912:    if (__retval >= 0)
        -:  913:      __mingw_bos_ptr_chk(__stream, (size_t)__retval + 1, 1);
        -:  914:    return __retval;
        -:  915:  }
        -:  916:  return __mingw_call_ms_sprintf( __stream, __format, __builtin_va_arg_pack() );
        -:  917:}
        -:  918:
        -:  919:#endif /* __MINGW_FORTIFY_VA_ARG */
        -:  920:
        -:  921:#if __MINGW_FORTIFY_LEVEL > 0
        -:  922:
        -:  923:int __cdecl __mingw_call_ms_vsprintf(char * __restrict__, const char * __restrict__, va_list) __MINGW_ASM_CALL(vsprintf);
        -:  924:
        -:  925:__mingw_bos_extern_ovr
        -:  926:__attribute__((__format__ (ms_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  927:int vsprintf (char * __restrict__ __stream, const char * __restrict__ __format, va_list __local_argv)
        -:  928:{
        -:  929:  if (__mingw_bos_known(__stream)) {
        -:  930:    int __retval = __ms_vsnprintf( __stream, __mingw_bos(__stream, 1), __format, __local_argv );
        -:  931:    if (__retval >= 0)
        -:  932:      __mingw_bos_ptr_chk(__stream, (size_t)__retval + 1, 1);
        -:  933:    return __retval;
        -:  934:  }
        -:  935:  return __mingw_call_ms_vsprintf( __stream, __format, __local_argv );
        -:  936:}
        -:  937:
        -:  938:#endif /* __MINGW_FORTIFY_LEVEL > 0 */
        -:  939:
        -:  940:#ifdef __GNUC__
        -:  941:#pragma GCC diagnostic pop
        -:  942:#endif
        -:  943:#endif /* _UCRT */
        -:  944:#endif /* __USE_MINGW_ANSI_STDIO */
        -:  945:
        -:  946:  _CRTIMP int __cdecl _set_printf_count_output(int _Value);
        -:  947:  _CRTIMP int __cdecl _get_printf_count_output(void);
        -:  948:
        -:  949:#ifndef _WSTDIO_DEFINED
        -:  950:#define _WSTDIO_DEFINED
        -:  951:
        -:  952:/* __attribute__((__format__ (gnu_wscanf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -:  953:  int __cdecl __mingw_swscanf(const wchar_t * __restrict__ _Src,const wchar_t * __restrict__ _Format,...);
        -:  954:/* __attribute__((__format__ (gnu_wscanf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -:  955:  int __cdecl __mingw_vswscanf (const wchar_t * __restrict__ _Str,const wchar_t * __restrict__ Format,va_list argp);
        -:  956:/* __attribute__((__format__ (gnu_wscanf, 1, 2))) */ __MINGW_ATTRIB_NONNULL(1)
        -:  957:  int __cdecl __mingw_wscanf(const wchar_t * __restrict__ _Format,...);
        -:  958:/* __attribute__((__format__ (gnu_wscanf, 1, 0))) */ __MINGW_ATTRIB_NONNULL(1)
        -:  959:  int __cdecl __mingw_vwscanf(const wchar_t * __restrict__ Format, va_list argp);
        -:  960:/* __attribute__((__format__ (gnu_wscanf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -:  961:  int __cdecl __mingw_fwscanf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...);
        -:  962:/* __attribute__((__format__ (gnu_wscanf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -:  963:  int __cdecl __mingw_vfwscanf (FILE * __restrict__ fp, const wchar_t * __restrict__ Format,va_list argp);
        -:  964:
        -:  965:/* __attribute__((__format__ (gnu_wprintf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -:  966:  int __cdecl __mingw_fwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...);
        -:  967:/* __attribute__((__format__ (gnu_wprintf, 1, 2))) */ __MINGW_ATTRIB_NONNULL(1)
        -:  968:  int __cdecl __mingw_wprintf(const wchar_t * __restrict__ _Format,...);
        -:  969:/* __attribute__((__format__ (gnu_wprintf, 2, 0))) */__MINGW_ATTRIB_NONNULL(2)
        -:  970:  int __cdecl __mingw_vfwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,va_list _ArgList);
        -:  971:/*__attribute__((__format__ (gnu_wprintf, 1, 0))) */ __MINGW_ATTRIB_NONNULL(1)
        -:  972:  int __cdecl __mingw_vwprintf(const wchar_t * __restrict__ _Format,va_list _ArgList);
        -:  973:/* __attribute__((__format__ (gnu_wprintf, 3, 4))) */ __MINGW_ATTRIB_NONNULL(3)
        -:  974:  int __cdecl __mingw_snwprintf (wchar_t * __restrict__ s, size_t n, const wchar_t * __restrict__ format, ...);
        -:  975:/* __attribute__((__format__ (gnu_wprintf, 3, 0))) */ __MINGW_ATTRIB_NONNULL(3)
        -:  976:  int __cdecl __mingw_vsnwprintf (wchar_t * __restrict__ , size_t, const wchar_t * __restrict__ , va_list);
        -:  977:/* __attribute__((__format__ (gnu_wprintf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -:  978:  int __cdecl __mingw_swprintf(wchar_t * __restrict__ , const wchar_t * __restrict__ , ...);
        -:  979:/* __attribute__((__format__ (gnu_wprintf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -:  980:  int __cdecl __mingw_vswprintf(wchar_t * __restrict__ , const wchar_t * __restrict__ ,va_list);
        -:  981:
        -:  982:/* __attribute__((__format__ (ms_wscanf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -:  983:  int __cdecl __ms_swscanf(const wchar_t * __restrict__ _Src,const wchar_t * __restrict__ _Format,...);
        -:  984:/* __attribute__((__format__ (ms_wscanf, 1, 2))) */ __MINGW_ATTRIB_NONNULL(1)
        -:  985:  int __cdecl __ms_wscanf(const wchar_t * __restrict__ _Format,...);
        -:  986:/* __attribute__((__format__ (ms_wscanf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -:  987:  int __cdecl __ms_fwscanf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...);
        -:  988:
        -:  989:/* __attribute__((__format__ (ms_wprintf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -:  990:  int __cdecl __ms_fwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...);
        -:  991:/* __attribute__((__format__ (ms_wprintf, 1, 2))) */ __MINGW_ATTRIB_NONNULL(1)
        -:  992:  int __cdecl __ms_wprintf(const wchar_t * __restrict__ _Format,...);
        -:  993:/* __attribute__((__format__ (ms_wprintf, 2, 0))) */__MINGW_ATTRIB_NONNULL(2)
        -:  994:  int __cdecl __ms_vfwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,va_list _ArgList);
        -:  995:/*__attribute__((__format__ (ms_wprintf, 1, 0))) */ __MINGW_ATTRIB_NONNULL(1)
        -:  996:  int __cdecl __ms_vwprintf(const wchar_t * __restrict__ _Format,va_list _ArgList);
        -:  997:/* __attribute__((__format__ (ms_wprintf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -:  998:  int __cdecl __ms_swprintf(wchar_t * __restrict__ , const wchar_t * __restrict__ , ...);
        -:  999:/* __attribute__((__format__ (ms_wprintf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1000:  int __cdecl __ms_vswprintf(wchar_t * __restrict__ , const wchar_t * __restrict__ ,va_list);
        -: 1001:
        -: 1002:#ifdef _UCRT
        -: 1003:  int __cdecl __stdio_common_vswprintf(unsigned __int64 options, wchar_t *str, size_t len, const wchar_t *format, _locale_t locale, va_list valist);
        -: 1004:  int __cdecl __stdio_common_vfwprintf(unsigned __int64 options, FILE *file, const wchar_t *format, _locale_t locale, va_list valist);
        -: 1005:  int __cdecl __stdio_common_vswscanf(unsigned __int64 options, const wchar_t *input, size_t length, const wchar_t *format, _locale_t locale, va_list valist);
        -: 1006:  int __cdecl __stdio_common_vfwscanf(unsigned __int64 options, FILE *file, const wchar_t *format, _locale_t locale, va_list valist);
        -: 1007:#endif
        -: 1008:
        -: 1009:#if __USE_MINGW_ANSI_STDIO && !defined(_CRTBLD)
        -: 1010:/*
        -: 1011: * User has expressed a preference for C99 conformance...
        -: 1012: */
        -: 1013:
        -: 1014:__mingw_ovr
        -: 1015:/* __attribute__((__format__ (gnu_wscanf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1016:int swscanf(const wchar_t *__source, const wchar_t *__format, ...)
        -: 1017:{
        -: 1018:  int __retval;
        -: 1019:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -: 1020:  __retval = __mingw_vswscanf( __source, __format, __local_argv );
        -: 1021:  __builtin_va_end( __local_argv );
        -: 1022:  return __retval;
        -: 1023:}
        -: 1024:
        -: 1025:__mingw_ovr
        -: 1026:/* __attribute__((__format__ (gnu_wscanf, 1, 2))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1027:int wscanf(const wchar_t *__format, ...)
        -: 1028:{
        -: 1029:  int __retval;
        -: 1030:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -: 1031:  __retval = __mingw_vfwscanf( stdin, __format, __local_argv );
        -: 1032:  __builtin_va_end( __local_argv );
        -: 1033:  return __retval;
        -: 1034:}
        -: 1035:
        -: 1036:__mingw_ovr
        -: 1037:/* __attribute__((__format__ (gnu_wscanf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1038:int fwscanf(FILE *__stream, const wchar_t *__format, ...)
        -: 1039:{
        -: 1040:  int __retval;
        -: 1041:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -: 1042:  __retval = __mingw_vfwscanf( __stream, __format, __local_argv );
        -: 1043:  __builtin_va_end( __local_argv );
        -: 1044:  return __retval;
        -: 1045:}
        -: 1046:
        -: 1047:#ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
        -: 1048:__mingw_ovr
        -: 1049:/* __attribute__((__format__ (gnu_wscanf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1050:int vswscanf (const wchar_t * __restrict__ __source, const wchar_t * __restrict__ __format, __builtin_va_list __local_argv)
        -: 1051:{
        -: 1052:  return __mingw_vswscanf( __source, __format, __local_argv );
        -: 1053:}
        -: 1054:
        -: 1055:__mingw_ovr
        -: 1056:/* __attribute__((__format__ (gnu_wscanf, 1, 0))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1057:int vwscanf(const wchar_t *__format,  __builtin_va_list __local_argv)
        -: 1058:{
        -: 1059:  return __mingw_vfwscanf( stdin, __format, __local_argv );
        -: 1060:}
        -: 1061:
        -: 1062:__mingw_ovr
        -: 1063:/* __attribute__((__format__ (gnu_wscanf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1064:int vfwscanf (FILE *__stream,  const wchar_t *__format, __builtin_va_list __local_argv)
        -: 1065:{
        -: 1066:  return __mingw_vfwscanf( __stream, __format, __local_argv );
        -: 1067:}
        -: 1068:#endif /* __NO_ISOCEXT */
        -: 1069:
        -: 1070:
        -: 1071:
        -: 1072:__mingw_ovr
        -: 1073:/* __attribute__((__format__ (gnu_wprintf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1074:int fwprintf (FILE *__stream, const wchar_t *__format, ...)
        -: 1075:{
        -: 1076:  int __retval;
        -: 1077:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -: 1078:  __retval = __mingw_vfwprintf( __stream, __format, __local_argv );
        -: 1079:  __builtin_va_end( __local_argv );
        -: 1080:  return __retval;
        -: 1081:}
        -: 1082:
        -: 1083:__mingw_ovr
        -: 1084:/* __attribute__((__format__ (gnu_wprintf, 1, 2))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1085:int wprintf (const wchar_t *__format, ...)
        -: 1086:{
        -: 1087:  int __retval;
        -: 1088:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -: 1089:  __retval = __mingw_vfwprintf( stdout, __format, __local_argv );
        -: 1090:  __builtin_va_end( __local_argv );
        -: 1091:  return __retval;
        -: 1092:}
        -: 1093:
        -: 1094:__mingw_ovr
        -: 1095:/* __attribute__((__format__ (gnu_wprintf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1096:int vfwprintf (FILE *__stream, const wchar_t *__format, __builtin_va_list __local_argv)
        -: 1097:{
        -: 1098:  return __mingw_vfwprintf( __stream, __format, __local_argv );
        -: 1099:}
        -: 1100:
        -: 1101:__mingw_ovr
        -: 1102:/* __attribute__((__format__ (gnu_wprintf, 1, 0))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1103:int vwprintf (const wchar_t *__format, __builtin_va_list __local_argv)
        -: 1104:{
        -: 1105:  return __mingw_vfwprintf( stdout, __format, __local_argv );
        -: 1106:}
        -: 1107:
        -: 1108:#ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
        -: 1109:
        -: 1110:#if __MINGW_FORTIFY_VA_ARG
        -: 1111:
        -: 1112:int snwprintf (wchar_t *__stream, size_t __n, const wchar_t *__format, ...) __MINGW_ASM_CALL(__mingw_snwprintf);
        -: 1113:
        -: 1114:__mingw_bos_extern_ovr
        -: 1115:/* __attribute__((__format__ (gnu_wprintf, 3, 4))) */ __MINGW_ATTRIB_NONNULL(3)
        -: 1116:int snwprintf (wchar_t *__stream, size_t __n, const wchar_t *__format, ...)
        -: 1117:{
        -: 1118:  __mingw_bos_ptr_chk_warn(__stream, __n * sizeof(wchar_t), 1);
        -: 1119:  return __mingw_snwprintf( __stream, __n, __format, __builtin_va_arg_pack() );
        -: 1120:}
        -: 1121:
        -: 1122:#else /* !__MINGW_FORTIFY_VA_ARG */
        -: 1123:
        -: 1124:__mingw_ovr
        -: 1125:/* __attribute__((__format__ (gnu_wprintf, 3, 4))) */ __MINGW_ATTRIB_NONNULL(3)
        -: 1126:int snwprintf (wchar_t *__stream, size_t __n, const wchar_t *__format, ...)
        -: 1127:{
        -: 1128:  int __retval;
        -: 1129:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -: 1130:  __retval = __mingw_vsnwprintf( __stream, __n, __format, __local_argv );
        -: 1131:  __builtin_va_end( __local_argv );
        -: 1132:  return __retval;
        -: 1133:}
        -: 1134:
        -: 1135:#endif /* __MINGW_FORTIFY_VA_ARG */
        -: 1136:
        -: 1137:__mingw_bos_ovr
        -: 1138:/* __attribute__((__format__ (gnu_wprintf, 3, 0))) */ __MINGW_ATTRIB_NONNULL(3)
        -: 1139:int vsnwprintf (wchar_t *__stream, size_t __n, const wchar_t *__format, __builtin_va_list __local_argv)
        -: 1140:{
        -: 1141:#if __MINGW_FORTIFY_LEVEL > 0
        -: 1142:  __mingw_bos_ptr_chk_warn(__stream, __n * sizeof(wchar_t), 1);
        -: 1143:#endif
        -: 1144:  return __mingw_vsnwprintf( __stream, __n, __format, __local_argv );
        -: 1145:}
        -: 1146:#endif /* __NO_ISOCEXT */
        -: 1147:
        -: 1148:#else /* !__USE_MINGW_ANSI_STDIO */
        -: 1149:
        -: 1150:#ifdef _UCRT
        -: 1151:  __mingw_ovr __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -: 1152:  int __cdecl fwscanf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...)
        -: 1153:  {
        -: 1154:    __builtin_va_list __ap;
        -: 1155:    int __ret;
        -: 1156:    __builtin_va_start(__ap, _Format);
        -: 1157:    __ret = __stdio_common_vfwscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, _File, _Format, NULL, __ap);
        -: 1158:    __builtin_va_end(__ap);
        -: 1159:    return __ret;
        -: 1160:  }
        -: 1161:  __mingw_ovr __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -: 1162:  int __cdecl swscanf(const wchar_t * __restrict__ _Src,const wchar_t * __restrict__ _Format,...)
        -: 1163:  {
        -: 1164:    __builtin_va_list __ap;
        -: 1165:    int __ret;
        -: 1166:    __builtin_va_start(__ap, _Format);
        -: 1167:    __ret = __stdio_common_vswscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, _Src, (size_t)-1, _Format, NULL, __ap);
        -: 1168:    __builtin_va_end(__ap);
        -: 1169:    return __ret;
        -: 1170:  }
        -: 1171:  __mingw_ovr __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -: 1172:  int __cdecl wscanf(const wchar_t * __restrict__ _Format,...)
        -: 1173:  {
        -: 1174:    __builtin_va_list __ap;
        -: 1175:    int __ret;
        -: 1176:    __builtin_va_start(__ap, _Format);
        -: 1177:    __ret = __stdio_common_vfwscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, stdin, _Format, NULL, __ap);
        -: 1178:    __builtin_va_end(__ap);
        -: 1179:    return __ret;
        -: 1180:  }
        -: 1181:  __mingw_ovr
        -: 1182:  __MINGW_ATTRIB_NONNULL(2)
        -: 1183:  int vfwscanf (FILE *__stream,  const wchar_t *__format, va_list __local_argv)
        -: 1184:  {
        -: 1185:    return __stdio_common_vfwscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, __stream, __format, NULL, __local_argv);
        -: 1186:  }
        -: 1187:
        -: 1188:  __mingw_ovr
        -: 1189:  __MINGW_ATTRIB_NONNULL(2)
        -: 1190:  int vswscanf (const wchar_t * __restrict__ __source, const wchar_t * __restrict__ __format, va_list __local_argv)
        -: 1191:  {
        -: 1192:    return __stdio_common_vswscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, __source, (size_t)-1, __format, NULL, __local_argv);
        -: 1193:  }
        -: 1194:  __mingw_ovr
        -: 1195:  __MINGW_ATTRIB_NONNULL(1)
        -: 1196:  int vwscanf(const wchar_t *__format, va_list __local_argv)
        -: 1197:  {
        -: 1198:    return __stdio_common_vfwscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, stdin, __format, NULL, __local_argv);
        -: 1199:  }
        -: 1200:
        -: 1201:  __mingw_static_ovr
        -: 1202:  int __cdecl fwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...)
        -: 1203:  {
        -: 1204:    __builtin_va_list __ap;
        -: 1205:    int __ret;
        -: 1206:    __builtin_va_start(__ap, _Format);
        -: 1207:    __ret = __stdio_common_vfwprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _File, _Format, NULL, __ap);
        -: 1208:    __builtin_va_end(__ap);
        -: 1209:    return __ret;
        -: 1210:  }
        -: 1211:  __mingw_ovr
        -: 1212:  int __cdecl wprintf(const wchar_t * __restrict__ _Format,...)
        -: 1213:  {
        -: 1214:    __builtin_va_list __ap;
        -: 1215:    int __ret;
        -: 1216:    __builtin_va_start(__ap, _Format);
        -: 1217:    __ret = __stdio_common_vfwprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, stdout, _Format, NULL, __ap);
        -: 1218:    __builtin_va_end(__ap);
        -: 1219:    return __ret;
        -: 1220:  }
        -: 1221:  __mingw_ovr
        -: 1222:  int __cdecl vfwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,va_list _ArgList)
        -: 1223:  {
        -: 1224:    return __stdio_common_vfwprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _File, _Format, NULL, _ArgList);
        -: 1225:  }
        -: 1226:  __mingw_ovr
        -: 1227:  int __cdecl vwprintf(const wchar_t * __restrict__ _Format,va_list _ArgList)
        -: 1228:  {
        -: 1229:    return __stdio_common_vfwprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, stdout, _Format, NULL, _ArgList);
        -: 1230:  }
        -: 1231:#else
        -: 1232:
        -: 1233:  int __cdecl fwscanf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1234:  int __cdecl swscanf(const wchar_t * __restrict__ _Src,const wchar_t * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1235:  int __cdecl wscanf(const wchar_t * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1236:#ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
        -: 1237:  int __cdecl __ms_vwscanf (const wchar_t * __restrict__ , va_list);
        -: 1238:  int __cdecl __ms_vfwscanf (FILE * __restrict__ ,const wchar_t * __restrict__ ,va_list);
        -: 1239:  int __cdecl __ms_vswscanf (const wchar_t * __restrict__ ,const wchar_t * __restrict__ ,va_list);
        -: 1240:
        -: 1241:  __mingw_ovr
        -: 1242:  __MINGW_ATTRIB_NONNULL(2)
        -: 1243:  int vfwscanf (FILE *__stream,  const wchar_t *__format, __builtin_va_list __local_argv)
        -: 1244:  {
        -: 1245:    return __ms_vfwscanf (__stream, __format, __local_argv);
        -: 1246:  }
        -: 1247:
        -: 1248:  __mingw_ovr
        -: 1249:  __MINGW_ATTRIB_NONNULL(2)
        -: 1250:  int vswscanf (const wchar_t * __restrict__ __source, const wchar_t * __restrict__ __format, __builtin_va_list __local_argv)
        -: 1251:  {
        -: 1252:    return __ms_vswscanf( __source, __format, __local_argv );
        -: 1253:  }
        -: 1254:  __mingw_ovr
        -: 1255:  __MINGW_ATTRIB_NONNULL(1)
        -: 1256:  int vwscanf(const wchar_t *__format,  __builtin_va_list __local_argv)
        -: 1257:  {
        -: 1258:    return __ms_vwscanf (__format, __local_argv);
        -: 1259:  }
        -: 1260:
        -: 1261:#endif /* __NO_ISOCEXT */
        -: 1262:
        -: 1263:  int __cdecl fwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...);
        -: 1264:  int __cdecl wprintf(const wchar_t * __restrict__ _Format,...);
        -: 1265:  int __cdecl vfwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,va_list _ArgList);
        -: 1266:  int __cdecl vwprintf(const wchar_t * __restrict__ _Format,va_list _ArgList);
        -: 1267:#endif /* _UCRT */
        -: 1268:#endif /* __USE_MINGW_ANSI_STDIO */
        -: 1269:
        -: 1270:#ifndef WEOF
        -: 1271:#define WEOF (wint_t)(0xFFFF)
        -: 1272:#endif
        -: 1273:
        -: 1274:#ifdef _POSIX_
        -: 1275:  _CRTIMP FILE *__cdecl _wfsopen(const wchar_t *_Filename,const wchar_t *_Mode);
        -: 1276:#else
        -: 1277:  _CRTIMP FILE *__cdecl _wfsopen(const wchar_t *_Filename,const wchar_t *_Mode,int _ShFlag);
        -: 1278:#endif
        -: 1279:
        -: 1280:  wint_t __cdecl fgetwc(FILE *_File);
        -: 1281:  _CRTIMP wint_t __cdecl _fgetwchar(void);
        -: 1282:  wint_t __cdecl fputwc(wchar_t _Ch,FILE *_File);
        -: 1283:  _CRTIMP wint_t __cdecl _fputwchar(wchar_t _Ch);
        -: 1284:  wint_t __cdecl getwc(FILE *_File);
        -: 1285:  wint_t __cdecl getwchar(void);
        -: 1286:  wint_t __cdecl putwc(wchar_t _Ch,FILE *_File);
        -: 1287:  wint_t __cdecl putwchar(wchar_t _Ch);
        -: 1288:  wint_t __cdecl ungetwc(wint_t _Ch,FILE *_File);
        -: 1289:  wchar_t *__cdecl fgetws(wchar_t * __restrict__ _Dst,int _SizeInWords,FILE * __restrict__ _File);
        -: 1290:  int __cdecl fputws(const wchar_t * __restrict__ _Str,FILE * __restrict__ _File);
        -: 1291:  _CRTIMP wchar_t *__cdecl _getws(wchar_t *_String) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1292:  _CRTIMP int __cdecl _putws(const wchar_t *_Str);
        -: 1293:
        -: 1294:#ifdef _UCRT
        -: 1295:  __mingw_ovr
        -: 1296:  int __cdecl _scwprintf(const wchar_t * __restrict__ _Format,...)
        -: 1297:  {
        -: 1298:    __builtin_va_list __ap;
        -: 1299:    int __ret;
        -: 1300:    __builtin_va_start(__ap, _Format);
        -: 1301:    __ret = __stdio_common_vswprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR, NULL, 0, _Format, NULL, __ap);
        -: 1302:    __builtin_va_end(__ap);
        -: 1303:    return __ret;
        -: 1304:  }
        -: 1305:  __mingw_static_ovr __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -: 1306:  int __cdecl _snwprintf(wchar_t * __restrict__ _Dest,size_t _Count,const wchar_t * __restrict__ _Format,...)
        -: 1307:  {
        -: 1308:    __builtin_va_list __ap;
        -: 1309:    int __ret;
        -: 1310:    __builtin_va_start(__ap, _Format);
        -: 1311:    __ret = __stdio_common_vswprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION, _Dest, _Count, _Format, NULL, __ap);
        -: 1312:    __builtin_va_end(__ap);
        -: 1313:    return __ret;
        -: 1314:  }
        -: 1315:  int __cdecl _vsnwprintf(wchar_t * __restrict__ _Dest,size_t _Count,const wchar_t * __restrict__ _Format,va_list _Args) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1316:
        -: 1317:#if __USE_MINGW_ANSI_STDIO == 0
        -: 1318:  __mingw_ovr
        -: 1319:  int snwprintf (wchar_t * __restrict__ s, size_t n, const wchar_t * __restrict__ format, ...)
        -: 1320:  {
        -: 1321:    __builtin_va_list __ap;
        -: 1322:    int __ret;
        -: 1323:    __builtin_va_start(__ap, format);
        -: 1324:    __ret = __stdio_common_vswprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR, s, n, format, NULL, __ap);
        -: 1325:    __builtin_va_end(__ap);
        -: 1326:    return __ret;
        -: 1327:  }
        -: 1328:  __mingw_ovr
        -: 1329:  int __cdecl vsnwprintf (wchar_t * __restrict__ s, size_t n, const wchar_t * __restrict__ format, va_list arg)
        -: 1330:  {
        -: 1331:    int __ret = __stdio_common_vswprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, s, n, format, NULL, arg);
        -: 1332:    return __ret < 0 ? -1 : __ret;
        -: 1333:  }
        -: 1334:#endif
        -: 1335:
        -: 1336:  __mingw_ovr
        -: 1337:  int __cdecl _swprintf(wchar_t * __restrict__ _Dest,const wchar_t * __restrict__ _Format,...)
        -: 1338:  {
        -: 1339:    __builtin_va_list __ap;
        -: 1340:    int __ret;
        -: 1341:    __builtin_va_start(__ap, _Format);
        -: 1342:    __ret = __stdio_common_vswprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Dest, (size_t)-1, _Format, NULL, __ap);
        -: 1343:    __builtin_va_end(__ap);
        -: 1344:    return __ret;
        -: 1345:  }
        -: 1346:  __mingw_ovr
        -: 1347:  int __cdecl _vswprintf(wchar_t * __restrict__ _Dest,const wchar_t * __restrict__ _Format,va_list _Args)
        -: 1348:  {
        -: 1349:    return __stdio_common_vswprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Dest, (size_t)-1, _Format, NULL, _Args);
        -: 1350:  }
        -: 1351:
        -: 1352:  __mingw_ovr
        -: 1353:  int __cdecl _vscwprintf(const wchar_t * __restrict__ _Format, va_list _ArgList)
        -: 1354:  {
        -: 1355:      int _Result = __stdio_common_vswprintf(_CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR, NULL, 0, _Format, NULL, _ArgList);
        -: 1356:      return _Result < 0 ? -1 : _Result;
        -: 1357:  }
        -: 1358:#else
        -: 1359:  _CRTIMP int __cdecl _scwprintf(const wchar_t * __restrict__ _Format,...);
        -: 1360:  _CRTIMP int __cdecl _swprintf_c(wchar_t * __restrict__ _DstBuf,size_t _SizeInWords,const wchar_t * __restrict__ _Format,...);
        -: 1361:  _CRTIMP int __cdecl _vswprintf_c(wchar_t * __restrict__ _DstBuf,size_t _SizeInWords,const wchar_t * __restrict__ _Format,va_list _ArgList);
        -: 1362:  _CRTIMP int __cdecl _snwprintf(wchar_t * __restrict__ _Dest,size_t _Count,const wchar_t * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1363:  _CRTIMP int __cdecl _vsnwprintf(wchar_t * __restrict__ _Dest,size_t _Count,const wchar_t * __restrict__ _Format,va_list _Args) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1364:  _CRTIMP int __cdecl _vscwprintf(const wchar_t * __restrict__ _Format,va_list _ArgList);
        -: 1365:
        -: 1366:#ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
        -: 1367:
        -: 1368:#if __USE_MINGW_ANSI_STDIO == 0
        -: 1369:  int __cdecl __ms_snwprintf (wchar_t * __restrict__ s, size_t n, const wchar_t * __restrict__ format, ...);
        -: 1370:  int __cdecl __ms_vsnwprintf (wchar_t * __restrict__ , size_t, const wchar_t * __restrict__ , va_list);
        -: 1371:  __mingw_ovr
        -: 1372:  int snwprintf (wchar_t * __restrict__ s, size_t n, const wchar_t * __restrict__ format, ...)
        -: 1373:  {
        -: 1374:    int r;
        -: 1375:    va_list argp;
        -: 1376:    __builtin_va_start (argp, format);
        -: 1377:    r = _vsnwprintf (s, n, format, argp);
        -: 1378:    __builtin_va_end (argp);
        -: 1379:    return r;
        -: 1380:  }
        -: 1381:  __mingw_ovr
        -: 1382:  int __cdecl vsnwprintf (wchar_t * __restrict__ s, size_t n, const wchar_t * __restrict__ format, va_list arg)
        -: 1383:  {
        -: 1384:    return _vsnwprintf(s,n,format,arg);
        -: 1385:  }
        -: 1386:#endif
        -: 1387:
        -: 1388:#endif /* ! __NO_ISOCEXT */
        -: 1389:  _CRTIMP int __cdecl _swprintf(wchar_t * __restrict__ _Dest,const wchar_t * __restrict__ _Format,...);
        -: 1390:  _CRTIMP int __cdecl _vswprintf(wchar_t * __restrict__ _Dest,const wchar_t * __restrict__ _Format,va_list _Args);
        -: 1391:#endif /* _UCRT */
        -: 1392:
        -: 1393:#ifndef RC_INVOKED
        -: 1394:#include <swprintf.inl>
        -: 1395:#endif
        -: 1396:
        -: 1397:#ifdef _CRT_NON_CONFORMING_SWPRINTFS
        -: 1398:#ifndef __cplusplus
        -: 1399:#define _swprintf_l __swprintf_l
        -: 1400:#define _vswprintf_l __vswprintf_l
        -: 1401:#endif
        -: 1402:#endif
        -: 1403:
        -: 1404:  _CRTIMP wchar_t *__cdecl _wtempnam(const wchar_t *_Directory,const wchar_t *_FilePrefix);
        -: 1405:  _CRTIMP int __cdecl _snwscanf(const wchar_t * __restrict__ _Src,size_t _MaxCount,const wchar_t * __restrict__ _Format,...);
        -: 1406:  _CRTIMP FILE *__cdecl _wfdopen(int _FileHandle ,const wchar_t *_Mode);
        -: 1407:  _CRTIMP FILE *__cdecl _wfopen(const wchar_t * __restrict__ _Filename,const wchar_t *__restrict__  _Mode) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1408:  _CRTIMP FILE *__cdecl _wfreopen(const wchar_t * __restrict__ _Filename,const wchar_t * __restrict__ _Mode,FILE * __restrict__ _OldFile) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1409:
        -: 1410:#ifndef _CRT_WPERROR_DEFINED
        -: 1411:#define _CRT_WPERROR_DEFINED
        -: 1412:  _CRTIMP void __cdecl _wperror(const wchar_t *_ErrMsg);
        -: 1413:#endif
        -: 1414:  _CRTIMP FILE *__cdecl _wpopen(const wchar_t *_Command,const wchar_t *_Mode);
        -: 1415:#if !defined(NO_OLDNAMES) && !defined(wpopen)
        -: 1416:#define wpopen	_wpopen
        -: 1417:#endif
        -: 1418:
        -: 1419:  _CRTIMP int __cdecl _wremove(const wchar_t *_Filename);
        -: 1420:  _CRTIMP wchar_t *__cdecl _wtmpnam(wchar_t *_Buffer);
        -: 1421:#if __MSVCRT_VERSION__ >= 0x800
        -: 1422:  _CRTIMP wint_t __cdecl _fgetwc_nolock(FILE *_File);
        -: 1423:  _CRTIMP wint_t __cdecl _fputwc_nolock(wchar_t _Ch,FILE *_File);
        -: 1424:  _CRTIMP wint_t __cdecl _ungetwc_nolock(wint_t _Ch,FILE *_File);
        -: 1425:#endif
        -: 1426:
        -: 1427:#undef _CRT_GETPUTWCHAR_NOINLINE
        -: 1428:
        -: 1429:#if !defined(__cplusplus) || defined(_CRT_GETPUTWCHAR_NOINLINE) || defined (__CRT__NO_INLINE)
        -: 1430:#define getwchar() fgetwc(stdin)
        -: 1431:#define putwchar(_c) fputwc((_c),stdout)
        -: 1432:#else
        -: 1433:  __CRT_INLINE wint_t __cdecl getwchar() {return (fgetwc(stdin)); }
        -: 1434:  __CRT_INLINE wint_t __cdecl putwchar(wchar_t _C) {return (fputwc(_C,stdout)); }
        -: 1435:#endif
        -: 1436:
        -: 1437:#define getwc(_stm) fgetwc(_stm)
        -: 1438:#define putwc(_c,_stm) fputwc(_c,_stm)
        -: 1439:#if __MSVCRT_VERSION__ >= 0x800
        -: 1440:#define _putwc_nolock(_c,_stm) _fputwc_nolock(_c,_stm)
        -: 1441:#define _getwc_nolock(_c) _fgetwc_nolock(_c)
        -: 1442:#endif
        -: 1443:#endif
        -: 1444:
        -: 1445:#define _STDIO_DEFINED
        -: 1446:#endif
        -: 1447:
        -: 1448:#ifdef _UCRT
        -: 1449:  _CRTIMP int __cdecl _fgetc_nolock(FILE *_File);
        -: 1450:  _CRTIMP int __cdecl _fputc_nolock(int _Char, FILE *_File);
        -: 1451:  _CRTIMP int __cdecl _getc_nolock(FILE *_File);
        -: 1452:  _CRTIMP int __cdecl _putc_nolock(int _Char, FILE *_File);
        -: 1453:#else
        -: 1454:#define _fgetc_nolock(_stream) (--(_stream)->_cnt >= 0 ? 0xff & *(_stream)->_ptr++ : _filbuf(_stream))
        -: 1455:#define _fputc_nolock(_c,_stream) (--(_stream)->_cnt >= 0 ? 0xff & (*(_stream)->_ptr++ = (char)(_c)) : _flsbuf((_c),(_stream)))
        -: 1456:#define _getc_nolock(_stream) _fgetc_nolock(_stream)
        -: 1457:#define _putc_nolock(_c,_stream) _fputc_nolock(_c,_stream)
        -: 1458:#endif
        -: 1459:#define _getchar_nolock() _getc_nolock(stdin)
        -: 1460:#define _putchar_nolock(_c) _putc_nolock((_c),stdout)
        -: 1461:#define _getwchar_nolock() _getwc_nolock(stdin)
        -: 1462:#define _putwchar_nolock(_c) _putwc_nolock((_c),stdout)
        -: 1463:
        -: 1464:  _CRTIMP void __cdecl _lock_file(FILE *_File);
        -: 1465:  _CRTIMP void __cdecl _unlock_file(FILE *_File);
        -: 1466:#if __MSVCRT_VERSION__ >= 0x800
        -: 1467:  _CRTIMP int __cdecl _fclose_nolock(FILE *_File);
        -: 1468:  _CRTIMP int __cdecl _fflush_nolock(FILE *_File);
        -: 1469:  _CRTIMP size_t __cdecl _fread_nolock(void * __restrict__ _DstBuf,size_t _ElementSize,size_t _Count,FILE * __restrict__ _File);
        -: 1470:  _CRTIMP int __cdecl _fseek_nolock(FILE *_File,long _Offset,int _Origin);
        -: 1471:  _CRTIMP long __cdecl _ftell_nolock(FILE *_File);
        -: 1472:  __MINGW_EXTENSION _CRTIMP int __cdecl _fseeki64_nolock(FILE *_File,__int64 _Offset,int _Origin);
        -: 1473:  __MINGW_EXTENSION _CRTIMP __int64 __cdecl _ftelli64_nolock(FILE *_File);
        -: 1474:  _CRTIMP size_t __cdecl _fwrite_nolock(const void * __restrict__ _DstBuf,size_t _Size,size_t _Count,FILE * __restrict__ _File);
        -: 1475:  _CRTIMP int __cdecl _ungetc_nolock(int _Ch,FILE *_File);
        -: 1476:#endif
        -: 1477:
        -: 1478:#if !defined(NO_OLDNAMES) || !defined(_POSIX)
        -: 1479:#define P_tmpdir _P_tmpdir
        -: 1480:#define SYS_OPEN _SYS_OPEN
        -: 1481:
        -: 1482:  char *__cdecl tempnam(const char *_Directory,const char *_FilePrefix) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1483:  int __cdecl fcloseall(void) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1484:  FILE *__cdecl fdopen(int _FileHandle,const char *_Format) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1485:  int __cdecl fgetchar(void) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1486:  int __cdecl fileno(FILE *_File) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1487:  int __cdecl flushall(void) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1488:  int __cdecl fputchar(int _Ch) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1489:  int __cdecl getw(FILE *_File) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1490:  int __cdecl putw(int _Ch,FILE *_File) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1491:  int __cdecl rmtmp(void) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1492:#endif
        -: 1493:
        -: 1494:#ifndef __MINGW_MBWC_CONVERT_DEFINED
        -: 1495:#define __MINGW_MBWC_CONVERT_DEFINED
        -: 1496:
        -: 1497:/**
        -: 1498: * __mingw_str_wide_utf8
        -: 1499: * Converts a null terminated UCS-2 string to a multibyte (UTF-8) equivalent.
        -: 1500: * Caller is supposed to free allocated buffer with __mingw_str_free().
        -: 1501: * @param[in] wptr Pointer to wide string.
        -: 1502: * @param[out] mbptr Pointer to multibyte string.
        -: 1503: * @param[out] buflen Optional parameter for length of allocated buffer.
        -: 1504: * @return Number of characters converted, 0 for failure.
        -: 1505: *
        -: 1506: * WideCharToMultiByte - http://msdn.microsoft.com/en-us/library/dd374130(VS.85).aspx
        -: 1507: */
        -: 1508:int __cdecl __mingw_str_wide_utf8 (const wchar_t * const wptr, char **mbptr, size_t * buflen);
        -: 1509:
        -: 1510:/**
        -: 1511: * __mingw_str_utf8_wide
        -: 1512: * Converts a null terminated UTF-8 string to a UCS-2 equivalent.
        -: 1513: * Caller is supposed to free allocated buffer with __mingw_str_free().
        -: 1514: * @param[out] mbptr Pointer to multibyte string.
        -: 1515: * @param[in] wptr Pointer to wide string.
        -: 1516: * @param[out] buflen Optional parameter for length of allocated buffer.
        -: 1517: * @return Number of characters converted, 0 for failure.
        -: 1518: *
        -: 1519: * MultiByteToWideChar - http://msdn.microsoft.com/en-us/library/dd319072(VS.85).aspx
        -: 1520: */
        -: 1521:
        -: 1522:int __cdecl __mingw_str_utf8_wide (const char *const mbptr, wchar_t ** wptr, size_t * buflen);
        -: 1523:
        -: 1524:/**
        -: 1525: * __mingw_str_free
        -: 1526: * Frees buffer create by __mingw_str_wide_utf8 and __mingw_str_utf8_wide.
        -: 1527: * @param[in] ptr memory block to free.
        -: 1528: *
        -: 1529: */
        -: 1530:
        -: 1531:void __cdecl __mingw_str_free(void *ptr);
        -: 1532:
        -: 1533:#endif /* __MINGW_MBWC_CONVERT_DEFINED */
        -: 1534:
        -: 1535:#ifdef _CRT_USE_WINAPI_FAMILY_DESKTOP_APP
        -: 1536:#ifndef _WSPAWN_DEFINED
        -: 1537:#define _WSPAWN_DEFINED
        -: 1538:  _CRTIMP intptr_t __cdecl _wspawnl(int _Mode,const wchar_t *_Filename,const wchar_t *_ArgList,...);
        -: 1539:  _CRTIMP intptr_t __cdecl _wspawnle(int _Mode,const wchar_t *_Filename,const wchar_t *_ArgList,...);
        -: 1540:  _CRTIMP intptr_t __cdecl _wspawnlp(int _Mode,const wchar_t *_Filename,const wchar_t *_ArgList,...);
        -: 1541:  _CRTIMP intptr_t __cdecl _wspawnlpe(int _Mode,const wchar_t *_Filename,const wchar_t *_ArgList,...);
        -: 1542:  _CRTIMP intptr_t __cdecl _wspawnv(int _Mode,const wchar_t *_Filename,const wchar_t *const *_ArgList);
        -: 1543:  _CRTIMP intptr_t __cdecl _wspawnve(int _Mode,const wchar_t *_Filename,const wchar_t *const *_ArgList,const wchar_t *const *_Env);
        -: 1544:  _CRTIMP intptr_t __cdecl _wspawnvp(int _Mode,const wchar_t *_Filename,const wchar_t *const *_ArgList);
        -: 1545:  _CRTIMP intptr_t __cdecl _wspawnvpe(int _Mode,const wchar_t *_Filename,const wchar_t *const *_ArgList,const wchar_t *const *_Env);
        -: 1546:#endif
        -: 1547:
        -: 1548:#ifndef _P_WAIT
        -: 1549:#define _P_WAIT 0
        -: 1550:#define _P_NOWAIT 1
        -: 1551:#define _OLD_P_OVERLAY 2
        -: 1552:#define _P_NOWAITO 3
        -: 1553:#define _P_DETACH 4
        -: 1554:#define _P_OVERLAY 2
        -: 1555:
        -: 1556:#define _WAIT_CHILD 0
        -: 1557:#define _WAIT_GRANDCHILD 1
        -: 1558:#endif
        -: 1559:
        -: 1560:#ifndef _SPAWNV_DEFINED
        -: 1561:#define _SPAWNV_DEFINED
        -: 1562:  _CRTIMP intptr_t __cdecl _spawnv(int _Mode,const char *_Filename,const char *const *_ArgList);
        -: 1563:  _CRTIMP intptr_t __cdecl _spawnve(int _Mode,const char *_Filename,const char *const *_ArgList,const char *const *_Env);
        -: 1564:  _CRTIMP intptr_t __cdecl _spawnvp(int _Mode,const char *_Filename,const char *const *_ArgList);
        -: 1565:  _CRTIMP intptr_t __cdecl _spawnvpe(int _Mode,const char *_Filename,const char *const *_ArgList,const char *const *_Env);
        -: 1566:#endif
        -: 1567:#endif /* _CRT_USE_WINAPI_FAMILY_DESKTOP_APP */
        -: 1568:
        -: 1569:#ifdef __cplusplus
        -: 1570:}
        -: 1571:#endif
        -: 1572:
        -: 1573:#pragma pop_macro("snprintf")
        -: 1574:#pragma pop_macro("vsnprintf")
        -: 1575:#pragma pop_macro("snwprintf")
        -: 1576:#pragma pop_macro("vsnwprintf")
        -: 1577:
        -: 1578:#pragma pack(pop)
        -: 1579:
        -: 1580:#include <sec_api/stdio_s.h>
        -: 1581:
        -: 1582:#endif
